const i=`{% block sw_first_run_wizard_paypal_credentials %} <div class="sw-first-run-wizard-paypal-credentials"> <p class="sw-first-run-wizard-paypal-credentials__headerText"> {{ $t('swag-paypal-frw-credentials.textIntroPayPal') }} </p> <template v-if="settingsStore.isLoading"> <sw-skeleton-bar /> <sw-skeleton-bar /> <sw-skeleton-bar /> </template> <template v-else> <swag-paypal-setting path="SwagPayPal.settings.sandbox" :bordered="false" :disabled="inputsDisabled" @update:value="resetError()" /> <swag-paypal-onboarding-button v-show="!settingsStore.isSandbox" mode="live" :disabled="inputsDisabled" > {{ $t('swag-paypal-frw-credentials.buttonGetCredentials') }} </swag-paypal-onboarding-button> <swag-paypal-onboarding-button v-show="settingsStore.isSandbox" mode="sandbox" :disabled="inputsDisabled" > {{ $t('swag-paypal-frw-credentials.buttonGetSandboxCredentials') }} </swag-paypal-onboarding-button> <swag-paypal-setting v-show="!settingsStore.isSandbox" path="SwagPayPal.settings.clientId" :disabled="inputsDisabled" :error="error" /> <swag-paypal-setting v-show="!settingsStore.isSandbox" path="SwagPayPal.settings.clientSecret" :disabled="inputsDisabled" :error="error" /> <swag-paypal-setting v-show="!settingsStore.isSandbox" path="SwagPayPal.settings.merchantPayerId" :disabled="inputsDisabled" :error="error" /> <swag-paypal-setting v-show="settingsStore.isSandbox" path="SwagPayPal.settings.clientIdSandbox" :disabled="inputsDisabled" :error="error" /> <swag-paypal-setting v-show="settingsStore.isSandbox" path="SwagPayPal.settings.clientSecretSandbox" :disabled="inputsDisabled" :error="error" /> <swag-paypal-setting v-show="settingsStore.isSandbox" path="SwagPayPal.settings.merchantPayerIdSandbox" :disabled="inputsDisabled" :error="error" /> <mt-switch v-model:modelValue="asDefault" :disabled="!hasCredentials || inputsDisabled" :label="$t('swag-paypal-frw-credentials.labelSetDefault')" :helpText="$t('swag-paypal-frw-credentials.tooltipSetDefault')" /> <sw-loader v-if="isLoading" /> </template> </div> {% endblock %}`,n=Shopware.Component.wrapComponentConfig({template:i,inject:["SwagPaypalPaymentMethodService","SwagPayPalSettingsService"],emits:["frw-redirect"],mixins:[Shopware.Mixin.getByName("swag-paypal-notification"),Shopware.Mixin.getByName("swag-paypal-settings")],data(){return{isLoading:!1,asDefault:!1,error:null}},computed:{buttonConfig(){return this.$super("buttonConfig").map(e=>(e.key==="next"&&(e.action=this.onClickNext.bind(this)),e))},hasLiveCredentials(){return!!this.settingsStore.get("SwagPayPal.settings.clientId")&&!!this.settingsStore.get("SwagPayPal.settings.clientSecret")},hasSandboxCredentials(){return!!this.settingsStore.get("SwagPayPal.settings.clientIdSandbox")&&!!this.settingsStore.get("SwagPayPal.settings.clientSecretSandbox")},hasCredentials(){return!this.settingsStore.isSandbox&&this.hasLiveCredentials||this.settingsStore.isSandbox&&this.hasSandboxCredentials},inputsDisabled(){return this.isLoading||this.settingsStore.isLoading||this.savingSettings==="loading"}},watch:{"settingsStore.allConfigs":{deep:!0,handler(){this.resetError()}}},methods:{async onClickNext(){var a;if(!this.hasCredentials)return this.createNotificationError({message:this.$t("swag-paypal-frw-credentials.messageNoCredentials")}),!0;this.isLoading=!0;const t=(a=await this.saveSettings())==null?void 0:a.null,e=!this.settingsStore.isSandbox&&(t==null?void 0:t.liveCredentialsChanged)||this.settingsStore.isSandbox&&(t==null?void 0:t.sandboxCredentialsChanged);let s=!this.settingsStore.isSandbox&&(t==null?void 0:t.liveCredentialsValid)||this.settingsStore.isSandbox&&(t==null?void 0:t.sandboxCredentialsValid);if(e||(s=await this.onTest()),this.isLoading=!1,!s)return this.error={detail:this.$t("swag-paypal-frw-credentials.messageInvalidCredentials"),code:"ASD"},!0;if(this.$emit("frw-redirect","sw.first.run.wizard.index.plugins"),this.asDefault)try{await this.SwagPaypalPaymentMethodService.setDefaultPaymentForSalesChannel(this.settingsStore.salesChannel)}catch{return!0}return!1},resetError(){this.error=null},async onTest(){const t=this.settingsStore.isSandbox?"Sandbox":"";return this.SwagPayPalSettingsService.testApiCredentials(this.settingsStore.get(`SwagPayPal.settings.clientId${t}`),this.settingsStore.get(`SwagPayPal.settings.clientSecret${t}`),this.settingsStore.get(`SwagPayPal.settings.merchantPayerId${t}`),this.settingsStore.isSandbox).then(e=>e.valid).catch(()=>!1)}}});export{n as default};
