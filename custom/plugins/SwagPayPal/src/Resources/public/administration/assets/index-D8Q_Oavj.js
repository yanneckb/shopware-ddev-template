const a=`<div class="swag-paypal-payment-method"> <img v-if="paymentMethod.media" class="swag-paypal-payment-method__icon" :src="paymentMethod.media.url" :alt="paymentMethod.media.translated.alt" > <div class="swag-paypal-payment-method__name"> {{ paymentMethod.translated.name }} <span v-if="isPui"> ({{ $t('swag-paypal-method.ratePayLabel') }}) </span> </div> <sw-skeleton-bar v-if="merchantInformationStore.isLoading" /> <div v-else class="swag-paypal-payment-method__dynamic"> <sw-help-text v-if="availabilityToolTip" :text="availabilityToolTip" /> <sw-label v-tooltip="{ message: onboardingStatusTooltip, position: 'top', disabled: !onboardingStatusTooltip, }" class="swag-paypal-payment-method__status-label" size="medium" appearance="pill" :variant="statusBadgeVariant" :ghost="false" :caps="false" > <sw-color-badge rounded :variant="statusBadgeVariant" /> <span>{{ onboardingStatusText }}</span> </sw-label> <router-link v-if="showEditLink" class="swag-paypal-payment-method__detail-link" :to="{ name: 'sw.settings.payment.detail', params: { id: paymentMethod.id } }" > {{ $t('swag-paypal-method.editDetail') }} </router-link> </div> <mt-switch :label="$t('swag-paypal-method.switch.label')" :disabled="paymentMethodToggleDisabled || !acl.can('swag_paypal.editor')" :model-value="paymentMethod.active" @update:model-value="onUpdateActive" /> <swag-paypal-method-domain-association v-if="identifier === 'applepayhandler'" :payment-method="paymentMethod" /> </div>`,e=Shopware.Component.wrapComponentConfig({template:a,inject:["acl"],emits:["update:active"],props:{paymentMethod:{type:Object,required:!0}},computed:{merchantInformationStore(){return Shopware.Store.get("swagPayPalMerchantInformation")},onboardingStatus(){return this.merchantInformationStore.capabilities[this.paymentMethod.id]},identifier(){var t;return((t=this.paymentMethod.formattedHandlerIdentifier)==null?void 0:t.split("_").pop())??""},isPui(){return this.identifier==="puihandler"},paymentMethodToggleDisabled(){return this.paymentMethod.active?!1:!this.showEditLink},showEditLink(){return["active","limited","mybank","test"].includes(this.onboardingStatus)},statusBadgeVariant(){switch(this.onboardingStatus){case"active":return"success";case"limited":case"mybank":return"danger";case"inactive":case"ineligible":return"neutral";case"test":case"pending":return"info";default:return"neutral"}},onboardingStatusText(){return this.$t(`swag-paypal-method.onboardingStatusText.${this.onboardingStatus}`)},onboardingStatusTooltip(){const t=`swag-paypal-method.onboardingStatusTooltip.${this.onboardingStatus}`;return this.$te(t)?this.$t(t):null},availabilityToolTip(){const t=`swag-paypal-method.availabilityToolTip.${this.identifier}`;return this.$te(t)?this.$t(t):null}},methods:{onUpdateActive(t){this.paymentMethod.active!==t&&this.$emit("update:active",t)}}});export{e as default};
